{"version":3,"sources":["webpack:///superClipBoard.min.js","webpack:///webpack/bootstrap f11881535243e3f5822c","webpack:///D:/gitspace/SuperClipBoard/src/main.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","ClipBoard","this","value","copyDom","document","createElement","style","position","left","top","width","height","body","appendChild","content","opt","createContentNode","innerHTML","selection","window","getSelection","range","createRange","selectNodeContents","removeAllRanges","addRange","execCommand","destroy","copyHandle","success","err","error","callback","dom","removeChild","doms","self","bindHandle","attr","attributes","copy","addEventListener","e","attachEvent","querySelectorAll","HTMLElement","superClipBoard"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMM,SAASI,EAAQD,GAEtB,YAIA,SAASQ,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAFhH,GAAIC,GAAe,WAAe,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAAiB,MAAO,UAAUR,EAAae,EAAYC,GAAiJ,MAA9HD,IAAYZ,EAAiBH,EAAYiB,UAAWF,GAAiBC,GAAab,EAAiBH,EAAagB,GAAqBhB,ME5C5hBkB,EAAS,WFsDV,QEtDCA,KFuDGpB,EAAgBqB,KEvDnBD,GF+KD,MArHAhB,GE1DCgB,IF2DGJ,IAAK,oBACLM,MAAO,WErDR,GAAIC,GAAUC,SAASC,cAAc,MAOrC,OANAF,GAAQG,MAAMC,SAAW,WACzBJ,EAAQG,MAAME,KAAO,UACrBL,EAAQG,MAAMG,IAAM,UACpBN,EAAQG,MAAMI,MAAQ,MACtBP,EAAQG,MAAMK,OAAS,MACvBP,SAASQ,KAAKC,YAAYV,GACnBA,KF8DNP,IAAK,OACLM,MAAO,SE7DPY,EAASC,GAUVA,EAAMA,KACN,KAEI,GAAIZ,GAAUF,KAAKe,mBACnBb,GAAQc,UAAYH,CACpB,IAAII,GAAYC,OAAOC,eACnBC,EAAQjB,SAASkB,aAYrB,OATAD,GAAME,mBAAmBpB,GACzBe,EAAUM,kBACVN,EAAUO,SAASJ,GACnBjB,SAASsB,YAAY,QAGrBzB,KAAK0B,QAAQxB,GAEbF,KAAK2B,WAAWb,EAAIc,UACb,EAEX,MAAOC,GAEH,MADA7B,MAAK2B,WAAWb,EAAIgB,QACb,MFgEVnC,IAAK,aACLM,MAAO,SE9DD8B,GACHA,GAGJA,EAASxD,UFiERoB,IAAK,UACLM,MAAO,SEhEJ+B,GAMJ7B,SAASQ,KAAKsB,YAAYD,MFmEzBrC,IAAK,OACLM,MAAO,SElEPiC,EAAMpB,GAMP,GAAIqB,GAAOnC,KACPoC,EAAa,SAASJ,GAClB,GAAIL,GAAa,WACb,GAAIU,GAAOrC,KAAKsC,WAAW,wBAC3BH,GAAKI,KAAKF,EAAKpC,MAAOa,GAEtBkB,GAAIQ,iBACJR,EAAIQ,iBAAiB,QAAS,SAASC,GACnCd,EAAWpD,KAAKyB,KAAMyC,KAGrBT,EAAIU,aACTV,EAAIU,YAAa,UAAW,SAASD,GACjCd,EAAWpD,KAAKyB,KAAMyC,KAItC,IAAIP,EAQJ,GAJmB,gBAATA,KACNA,EAAO/B,SAASwC,iBAAiBT,IAGlCA,EAAK9C,OAAS,EACb,IAAI,GAAID,GAAE,EAAGA,EAAE+C,EAAK9C,OAAQD,IACrB+C,EAAK/C,YAAcyD,cAClBR,EAAWF,EAAK/C,QAMxBiD,GAAWF,OAzGjBnC,IA6GNmB,QAAO2B,eAAiB,GAAI9C","file":"superClipBoard.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\r\n\t  * @author   milan(white gourd angel)\r\n\t  * @describe A fast way to copy text to clipboard with javascript,no flash, no dependencies, high performance\r\n\t  */\n\t\n\tvar ClipBoard = (function () {\n\t    function ClipBoard() {\n\t        _classCallCheck(this, ClipBoard);\n\t    }\n\t\n\t    _createClass(ClipBoard, [{\n\t        key: 'createContentNode',\n\t        value: function createContentNode() {\n\t            /**\r\n\t             * @describe Create dom, For storing data to be copied\r\n\t             * @param\r\n\t             * @return   dom\r\n\t             */\n\t            var copyDom = document.createElement('pre');\n\t            copyDom.style.position = 'absolute';\n\t            copyDom.style.left = '-9999px';\n\t            copyDom.style.top = '-9999px';\n\t            copyDom.style.width = '5px';\n\t            copyDom.style.height = '5px';\n\t            document.body.appendChild(copyDom);\n\t            return copyDom;\n\t        }\n\t    }, {\n\t        key: 'copy',\n\t        value: function copy(content, opt) {\n\t            /**\r\n\t             * @describe copy\r\n\t             * @param    content: Data for replication\r\n\t             *           opt: {\r\n\t             *              success: success callback\r\n\t             *              error: error callback\r\n\t             *           }\r\n\t             * @return\r\n\t             */\n\t            opt = opt || {};\n\t            try {\n\t                // create\n\t                var copyDom = this.createContentNode();\n\t                copyDom.innerHTML = content;\n\t                var selection = window.getSelection();\n\t                var range = document.createRange();\n\t\n\t                // select\n\t                range.selectNodeContents(copyDom);\n\t                selection.removeAllRanges();\n\t                selection.addRange(range);\n\t                document.execCommand('copy');\n\t\n\t                // destroy\n\t                this.destroy(copyDom);\n\t                // callback\n\t                this.copyHandle(opt.success);\n\t                return true;\n\t            } catch (err) {\n\t                this.copyHandle(opt.error);\n\t                return false;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'copyHandle',\n\t        value: function copyHandle(callback) {\n\t            if (!callback) {\n\t                return;\n\t            }\n\t            callback.call();\n\t        }\n\t    }, {\n\t        key: 'destroy',\n\t        value: function destroy(dom) {\n\t            /**\r\n\t             * @describe The node is removed when copy complete \r\n\t             * @param    dom\r\n\t             * @return   \r\n\t             */\n\t            document.body.removeChild(dom);\n\t        }\n\t    }, {\n\t        key: 'bind',\n\t        value: function bind(doms, opt) {\n\t            /**\r\n\t              * @describe Bind copy event, bind\r\n\t              * @param    doms: dom or [dom1, dom2, ...] or selector(str) or jqueryDom\r\n\t              * @return\r\n\t              */\n\t            var self = this,\n\t                bindHandle = function bindHandle(dom) {\n\t                var copyHandle = function copyHandle() {\n\t                    var attr = this.attributes['data-copy-content'] || {};\n\t                    self.copy(attr.value, opt);\n\t                };\n\t                if (dom.addEventListener) {\n\t                    dom.addEventListener('click', function (e) {\n\t                        copyHandle.call(this, e);\n\t                    });\n\t                } else if (dom.attachEvent) {\n\t                    dom.attachEvent(\"onClick\", function (e) {\n\t                        copyHandle.call(this, e);\n\t                    });\n\t                }\n\t            };\n\t            if (!doms) {\n\t                return;\n\t            }\n\t            // selector\n\t            if (typeof doms === 'string') {\n\t                doms = document.querySelectorAll(doms);\n\t            }\n\t            // doms\n\t            if (doms.length > 0) {\n\t                for (var i = 0; i < doms.length; i++) {\n\t                    if (doms[i] instanceof HTMLElement) {\n\t                        bindHandle(doms[i]);\n\t                    }\n\t                }\n\t            }\n\t            // dom\n\t            else {\n\t                    bindHandle(doms);\n\t                }\n\t        }\n\t    }]);\n\t\n\t    return ClipBoard;\n\t})();\n\t\n\twindow.superClipBoard = new ClipBoard();\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** superClipBoard.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap f11881535243e3f5822c\n **/","/**\r\n  * @author   milan(white gourd angel)\r\n  * @describe A fast way to copy text to clipboard with javascript,no flash, no dependencies, high performance\r\n  */\r\nclass ClipBoard{\r\n    createContentNode(){\r\n        /**\r\n         * @describe Create dom, For storing data to be copied\r\n         * @param\r\n         * @return   dom\r\n         */\r\n        var copyDom = document.createElement('pre');\r\n        copyDom.style.position = 'absolute';\r\n        copyDom.style.left = '-9999px';\r\n        copyDom.style.top = '-9999px';\r\n        copyDom.style.width = '5px';\r\n        copyDom.style.height = '5px';\r\n        document.body.appendChild(copyDom);\r\n        return copyDom;\r\n    }\r\n    copy(content, opt){\r\n        /**\r\n         * @describe copy\r\n         * @param    content: Data for replication\r\n         *           opt: {\r\n         *              success: success callback\r\n         *              error: error callback\r\n         *           }\r\n         * @return\r\n         */\r\n        opt = opt || {};\r\n        try {\r\n            // create\r\n            let copyDom = this.createContentNode();\r\n            copyDom.innerHTML = content;\r\n            let selection = window.getSelection();\r\n            let range = document.createRange();\r\n\r\n            // select\r\n            range.selectNodeContents(copyDom);\r\n            selection.removeAllRanges();\r\n            selection.addRange(range);\r\n            document.execCommand('copy');\r\n\r\n            // destroy\r\n            this.destroy(copyDom);\r\n            // callback\r\n            this.copyHandle(opt.success);\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            this.copyHandle(opt.error);\r\n            return false;\r\n        }\r\n    }\r\n    copyHandle(callback){\r\n        if(!callback){\r\n            return;\r\n        }\r\n        callback.call();\r\n    }\r\n    destroy(dom){\r\n        /**\r\n         * @describe The node is removed when copy complete \r\n         * @param    dom\r\n         * @return   \r\n         */\r\n        document.body.removeChild(dom);\r\n    }\r\n    bind(doms, opt){\r\n       /**\r\n         * @describe Bind copy event, bind\r\n         * @param    doms: dom or [dom1, dom2, ...] or selector(str) or jqueryDom\r\n         * @return\r\n         */\r\n        let self = this,\r\n            bindHandle = function(dom){\r\n                let copyHandle = function(){\r\n                    let attr = this.attributes['data-copy-content'] || {};\r\n                    self.copy(attr.value, opt);\r\n                };\r\n                if (dom.addEventListener){\r\n                    dom.addEventListener('click', function(e){\r\n                        copyHandle.call(this, e);\r\n                    });\r\n                }\r\n                else if (dom.attachEvent) {\r\n                    dom.attachEvent( \"onClick\", function(e) {\r\n                        copyHandle.call(this, e);\r\n                    });\r\n                }\r\n            };\r\n        if(!doms){\r\n            return;\r\n        }\r\n        // selector\r\n        if(typeof doms === 'string'){\r\n            doms = document.querySelectorAll(doms);\r\n        }\r\n        // doms\r\n        if(doms.length > 0){\r\n            for(var i=0; i<doms.length; i++){\r\n                if(doms[i] instanceof HTMLElement){\r\n                    bindHandle(doms[i]);\r\n                }\r\n            }\r\n        }\r\n        // dom\r\n        else{\r\n            bindHandle(doms);\r\n        }\r\n    }\r\n}\r\nwindow.superClipBoard = new ClipBoard();\r\n\n\n\n/** WEBPACK FOOTER **\n ** D:/gitspace/SuperClipBoard/src/main.js\n **/"],"sourceRoot":""}